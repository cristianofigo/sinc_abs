#N canvas 209 24 886 667 10;
#N canvas 0 0 450 300 (subpatch) 0;
#X array pitch_original 8 float 1;
#A 0 60.7789 63.5005 55.336 46.2645 51.7076 48.9862 40.8216 38.1002
;
#X coords 0 127 7 0 200 140 1;
#X restore 382 18 graph;
#N canvas 0 0 502 244 aparencia 0;
#X msg 50 122 \; contorno xticks 0 1 1;
#X msg 49 160 \; contorno yticks 0 1 8;
#X msg 50 50 \; contorno xlabel -0.4 1 2 3 4 5 6 7;
#X msg 51 85 \; contorno ylabel -0.2 1 2 3 4 5 6 7;
#X obj -107 137 table temp 8;
#X msg -166 158 \; temp bounds 0 127 7 0;
#X obj -2 -1 loadbang;
#X connect 6 0 5 0;
#X connect 6 0 2 0;
#X connect 6 0 3 0;
#X connect 6 0 0 0;
#X connect 6 0 1 0;
#X restore 205 420 pd aparencia array;
#N canvas 0 0 450 300 (subpatch) 0;
#X array pitch_resultado 8 float 1;
#A 0 40.043 35.7999 48.5288 62.6717 54.1856 58.4284 71.1575 75.4003
;
#X coords 0 127 7 0 200 140 1;
#X restore 383 188 graph;
#X text 338 580 idéia: fazer integração com o MusicContour;
#X text 381 592 do di Silva;
#N canvas 0 0 450 300 (subpatch) 0;
#X array contorno 8 float 1;
#A 0 7.14282 8 5.42854 2.5714 4.28574 3.42861 0.857125 0;
#X coords 0 8 7 0 200 140 1;
#X restore 383 355 graph;
#X text 337 556 pergunta: como saber o menor valor de uma array? (vanilla)
;
#N canvas 0 0 476 581 reduz 0;
#X floatatom 118 191 5 0 0 0 - - -;
#X obj 118 168 tabread pitch_original;
#X obj 118 143 t f f;
#X obj 118 96 until;
#X obj 118 118 counter 7;
#X msg 118 56 8;
#X obj 37 535 tabwrite contorno;
#X floatatom 118 339 5 0 0 0 min - -;
#X floatatom 181 339 5 0 0 0 max - -;
#X msg 364 213 set;
#X msg 145 236 add2 \$1;
#X msg 118 278 63.5005 55.336 46.2645 51.7076 48.9862 40.8216 38.1002
60.7789;
#X obj 118 316 list-minmax;
#X obj 118 75 t f b;
#X obj 118 362 s min;
#X obj 37 375 list-drip;
#X obj 118 213 t b f;
#X obj 181 361 s max;
#X obj 93 413 r min;
#X obj 93 435 t b f;
#X obj 142 439 r max;
#X obj 37 477 scale.linear 0 127 0 8;
#X floatatom 37 448 5 0 0 0 - - -;
#X obj 136 503 counter 7;
#X obj 37 410 t f b;
#X obj 118 27 t b b;
#X obj 118 5 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 16 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 17 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 0 15 0;
#X connect 12 0 7 0;
#X connect 12 1 8 0;
#X connect 13 0 3 0;
#X connect 13 1 9 0;
#X connect 15 0 24 0;
#X connect 16 0 11 0;
#X connect 16 1 10 0;
#X connect 18 0 19 0;
#X connect 19 1 21 1;
#X connect 20 0 21 2;
#X connect 21 0 6 0;
#X connect 22 0 21 0;
#X connect 23 0 6 1;
#X connect 24 0 22 0;
#X connect 24 1 23 0;
#X connect 25 0 5 0;
#X connect 25 1 5 0;
#X connect 26 0 25 0;
#X restore 204 399 pd reduz contorno;
#X text -99 10 normalização;
#X obj 228 610 list-wrandom;
#N canvas 0 0 787 512 retrogrado 0;
#X msg 303 118 30 32 42;
#X msg 309 210 30 28 18;
#X restore 225 567 pd retrogrado;
#N canvas 46 24 806 547 listas 0;
#X msg 436 96 1 2 3 4;
#X obj 464 129 print Original;
#X obj 436 219 list-rev;
#X obj 464 184 print Reversed;
#X obj 463 250 print Rev_again;
#X text 407 55 list-rev: reverse a list's order.;
#X obj 436 151 list-rev;
#X msg 146 148 0 1 2 3 4 5 6 7;
#X floatatom 289 148 5 0 0 0 ROT# - -;
#X obj 146 215 print;
#X obj 146 183 list-rot 3;
#X text 36 59 list-rot;
#X text 1 79 Rotate a list (move ROT# elements from front to back)
;
#X text 0 99 Negative ROT# will rotate elements from back to front.
;
#X obj 89 320 tabdump pitch_resultado;
#X obj 89 278 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 89 346 prepend set;
#X msg 89 370 78.0923 83.4354 71.0619 81.4669 105.933 81.7481 86.5288
81.1856;
#X obj 89 297 t b b;
#X msg 90 423 \; pitch_resultado 0 \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8
;
#X connect 0 0 1 0;
#X connect 0 0 6 0;
#X connect 2 0 4 0;
#X connect 6 0 2 0;
#X connect 6 0 3 0;
#X connect 7 0 10 0;
#X connect 8 0 10 1;
#X connect 10 0 9 0;
#X connect 14 0 16 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 18 1 14 0;
#X restore 226 589 pd listas;
#X msg -147 145 retrograde;
#X msg 176 166 retro-inversion;
#X floatatom 60 123 5 0 0 0 - - -;
#X msg 60 145 transpose \$1;
#X msg -1 169 inversion;
#X msg -64 145 inversion \$1;
#X floatatom -64 125 5 0 0 0 - - -;
#X msg 291 144 rotate \$1;
#X floatatom 291 124 5 0 0 0 - - -;
#X msg 146 145 retro-inversion \$1;
#X floatatom 146 122 5 0 0 0 - - -;
#X obj -108 314 metro 500;
#X obj -108 291 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj -108 367 tabread pitch_resultado;
#X obj -108 422 makenote 80 400;
#X obj -108 460 noteout;
#X obj -108 342 counter 7;
#X obj -108 395 int;
#N canvas 331 24 731 402 rj 1;
#X obj 43 148 c_patternchange;
#N canvas 0 0 450 300 show 0;
#X obj 41 39 inlet;
#X obj 186 36 inlet;
#X obj 41 124 outlet;
#X msg 186 76 set;
#X obj 41 83 list trim;
#X obj 41 59 list prepend set;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 130 176 pd show;
#N canvas 0 0 450 300 show 0;
#X obj 41 39 inlet;
#X obj 186 36 inlet;
#X obj 41 124 outlet;
#X msg 186 76 set;
#X obj 41 59 list prepend set;
#X obj 41 83 list trim;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X restore 43 209 pd show;
#X msg 43 241 40.043 35.7999 48.5288 62.6717 54.1856 58.4284 71.1575
75.4003;
#X msg -50 301 \; pitch_resultado 0 \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8
;
#X obj 130 125 tabdump temp;
#X obj 43 23 inlet;
#X obj 43 59 t a b;
#X obj 553 21 inlet;
#X msg 522 278 copy pitch_resultado;
#X obj 522 303 tabletool temp;
#X obj 553 140 t b b;
#X obj 553 171 timer;
#X obj 553 199 moses 500;
#X obj 522 251 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 130 219 outlet;
#X obj 130 90 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 2 0;
#X connect 0 0 4 0;
#X connect 0 1 1 0;
#X connect 1 0 15 0;
#X connect 2 0 3 0;
#X connect 5 0 0 1;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 7 1 16 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 11 1 12 1;
#X connect 12 0 13 0;
#X connect 13 1 14 0;
#X connect 14 0 9 0;
#X connect 16 0 5 0;
#X restore 74 260 pd rj;
#X obj 74 231 t a b;
#X obj -157 28 hsl 128 15 0 2 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 9900 1;
#N canvas 177 53 281 308 normalizacao 0;
#X floatatom -112 185 5 0 0 0 - - -;
#X obj -112 272 tabwrite pitch_resultado;
#X obj -112 218 *;
#X floatatom -172 147 5 0 0 0 - - -;
#X obj -112 133 t f f;
#X obj -112 86 until;
#X obj -112 108 counter 7;
#X msg -112 61 8;
#X obj -98 252 tabwrite temp;
#X obj -172 174 t b f;
#X obj -112 158 tabread pitch_original;
#X obj -172 23 inlet;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 4 0 10 0;
#X connect 4 1 1 1;
#X connect 4 1 8 1;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 9 0 7 0;
#X connect 9 1 2 1;
#X connect 10 0 0 0;
#X connect 11 0 3 0;
#X restore -160 88 pd normalizacao;
#X floatatom -160 62 5 0 0 0 - - -;
#N canvas 0 0 450 300 transposicao 0;
#X floatatom 118 185 5 0 0 0 - - -;
#X obj 118 252 tabwrite pitch_resultado;
#X floatatom 303 87 5 0 0 0 - - -;
#X obj 118 103 t f f;
#X obj 118 56 until;
#X obj 118 78 counter 7;
#X msg 118 31 8;
#X text 92 0 transposição;
#X obj 118 128 tabread temp;
#X obj 118 218 +;
#X obj 303 114 t b b f;
#X connect 0 0 9 0;
#X connect 2 0 10 0;
#X connect 3 0 8 0;
#X connect 3 1 1 1;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X connect 10 2 9 1;
#X restore 228 633 pd transposicao crua;
#X msg 74 303 retro-inversion 83;
#X text 151 284 última operação;
#X connect 12 0 31 0;
#X connect 13 0 31 0;
#X connect 14 0 15 0;
#X connect 15 0 31 0;
#X connect 16 0 31 0;
#X connect 17 0 31 0;
#X connect 18 0 17 0;
#X connect 19 0 31 0;
#X connect 20 0 19 0;
#X connect 21 0 31 0;
#X connect 22 0 21 0;
#X connect 23 0 28 0;
#X connect 24 0 23 0;
#X connect 25 0 29 0;
#X connect 26 0 27 0;
#X connect 26 1 27 1;
#X connect 28 0 25 0;
#X connect 29 0 26 0;
#X connect 30 0 36 0;
#X connect 31 0 30 0;
#X connect 31 1 30 1;
#X connect 32 0 34 0;
#X connect 34 0 33 0;
