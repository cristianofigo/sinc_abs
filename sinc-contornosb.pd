#N canvas 218 24 1060 662 10;
#N canvas 0 0 450 300 (subpatch) 0;
#X array pitch_original 8 float 1;
#A 0 39.0073 56.2431 16.3286 49.8931 128.815 50.8002 66.2218 48.9859
;
#X coords 0 127 7 0 200 140 1;
#X restore 644 95 graph;
#X floatatom -92 165 5 0 0 0 - - -;
#N canvas 0 0 706 289 aparencia 0;
#X msg 171 112 \; pitch xlabel 0 1 2 3 4 5 6 7;
#X msg 172 147 \; pitch ylabel 0 11 23 35 47 55 67 78 90 127;
#X text -200 135 Array graphs can be given "ticks" on both the x and
y axis to help you visually measure your data. The tick messages require
3 values: (the index or value of the FIRST large tick \, then the interval
between ticks \, then finally the number of ticks overall per large
tick).;
#X text -203 205 Arrays can be given labels to describe the x and y
axis. Give a y value and a bunch of x values or vice versa:;
#X msg 170 222 \; pitch yticks 0 11 12;
#X msg 171 184 \; pitch xticks 0 1 2;
#X msg -39 -28 \; contorno xlabel 0 1 2 3 4 5 6 7;
#X msg -38 7 \; contorno ylabel 0 1 2 3 4 5 6 7;
#X msg -39 44 \; contorno xticks 0 1 1;
#X msg -40 82 \; contorno yticks 0 1 8;
#X restore -172 570 pd aparencia array;
#N canvas 0 0 450 300 (subpatch) 0;
#X array pitch_resultado 8 float 1;
#A 0 108.962 137.373 109.288 114.84 108.635 105.043 111.248 96.8783
;
#X coords 0 127 7 0 200 140 1;
#X restore 640 293 graph;
#X text -173 619 idéia: fazer integração com o MusicContour;
#X text -130 631 do di Silva;
#X obj -92 252 tabwrite pitch_resultado;
#X obj -92 198 *;
#X floatatom -182 127 5 0 0 0 - - -;
#X obj -92 113 t f f;
#X obj -92 66 until;
#X obj -92 88 counter 7;
#X msg -92 41 8;
#N canvas 0 0 450 300 (subpatch) 0;
#X array contorno 8 float 1;
#A 0 1.6129 2.83871 0 2.3871 8 2.45161 3.54839 2.32258;
#X coords 0 8 7 0 200 140 1;
#X restore 640 460 graph;
#X text -174 595 pergunta: como saber o menor valor de uma array? (vanilla)
;
#X obj -172 475 tabdump contorno;
#X obj -172 500 prepend set;
#X msg -172 522 3.54277 2.79993 5.14273 1.99995 0.457132 1.6 3.71428
2.62857;
#X obj -172 454 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 0 476 581 reduz 0;
#X floatatom 118 191 5 0 0 0 - - -;
#X obj 118 168 tabread pitch_original;
#X obj 118 143 t f f;
#X obj 118 96 until;
#X obj 118 118 counter 7;
#X msg 118 56 8;
#X obj 37 535 tabwrite contorno;
#X floatatom 118 339 5 0 0 0 min - -;
#X floatatom 181 339 5 0 0 0 max - -;
#X msg 364 213 set;
#X msg 145 236 add2 \$1;
#X msg 118 278 56.2431 16.3286 49.8931 128.815 50.8002 66.2218 48.9859
39.0073;
#X obj 118 316 list-minmax;
#X obj 118 75 t f b;
#X obj 118 362 s min;
#X obj 37 375 list-drip;
#X obj 118 213 t b f;
#X obj 181 361 s max;
#X obj 93 413 r min;
#X obj 93 435 t b f;
#X obj 142 439 r max;
#X obj 37 477 scale.linear 0 127 0 8;
#X floatatom 37 448 5 0 0 0 - - -;
#X floatatom 37 507 5 0 0 0 - - -;
#X obj 136 503 counter 7;
#X obj 37 410 t f b;
#X obj 118 27 t b b;
#X obj 118 5 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 16 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 17 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 0 15 0;
#X connect 12 0 7 0;
#X connect 12 1 8 0;
#X connect 13 0 3 0;
#X connect 13 1 9 0;
#X connect 15 0 25 0;
#X connect 16 0 11 0;
#X connect 16 1 10 0;
#X connect 18 0 19 0;
#X connect 19 1 21 1;
#X connect 20 0 21 2;
#X connect 21 0 23 0;
#X connect 22 0 21 0;
#X connect 23 0 6 0;
#X connect 24 0 6 1;
#X connect 25 0 22 0;
#X connect 25 1 24 0;
#X connect 26 0 5 0;
#X connect 26 1 5 0;
#X connect 27 0 26 0;
#X restore -172 397 pd reduz contorno;
#X obj -168 369 table temp;
#X obj -182 154 t b f;
#X text -118 10 normalização;
#X floatatom 118 185 5 0 0 0 - - -;
#X obj 118 252 tabwrite pitch_resultado;
#X floatatom 228 77 5 0 0 0 - - -;
#X obj 118 103 t f f;
#X obj 118 56 until;
#X obj 118 78 counter 7;
#X msg 118 31 8;
#X obj 228 104 t b f;
#X text 92 0 transposição;
#X obj 118 218 +;
#X obj -92 138 tabread pitch_original;
#X obj 207 619 list-wrandom;
#X msg 396 336 1 2 3 4;
#X obj 424 369 print Original;
#X obj 396 459 list-rev;
#X obj 424 424 print Reversed;
#X obj 423 490 print Rev_again;
#X text 367 295 list-rev: reverse a list's order.;
#X obj 396 391 list-rev;
#X msg 106 388 0 1 2 3 4 5 6 7;
#X floatatom 249 388 5 0 0 0 ROT# - -;
#X obj 106 455 print;
#X obj 106 423 list-rot 3;
#X text -4 299 list-rot;
#X text -39 319 Rotate a list (move ROT# elements from front to back)
;
#X text -40 339 Negative ROT# will rotate elements from back to front.
;
#N canvas 0 0 787 512 retrogrado 0;
#X msg 303 118 30 32 42;
#X msg 309 210 30 28 18;
#X restore 211 554 pd retrogrado;
#N canvas 0 0 572 486 rj 0;
#X msg 227 28 retrograde;
#X msg 227 193 retro-inversion;
#X msg 227 -1 bang;
#X obj 344 303 loadbang;
#X floatatom 235 137 5 0 0 0 - - -;
#X msg 227 156 transpose \$1;
#X msg 227 60 inversion;
#X msg 227 113 inversion \$1;
#X floatatom 235 93 5 0 0 0 - - -;
#X msg 344 325 1 2 3 4 5;
#X msg 227 276 rotate \$1;
#X floatatom 237 256 5 0 0 0 - - -;
#X msg 227 234 retro-inversion \$1;
#X floatatom 237 215 5 0 0 0 - - -;
#X obj 227 324 c_patternchange;
#N canvas 0 0 450 300 show 0;
#X obj 41 39 inlet;
#X obj 186 36 inlet;
#X obj 41 124 outlet;
#X msg 186 76 set;
#X obj 41 59 list prepend set;
#X obj 41 83 list trim;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X restore 329 357 pd show;
#N canvas 0 0 450 300 show 0;
#X obj 41 39 inlet;
#X obj 186 36 inlet;
#X obj 41 124 outlet;
#X msg 186 76 set;
#X obj 41 59 list prepend set;
#X obj 41 83 list trim;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X restore 227 385 pd show;
#X msg 329 391 inversion;
#X msg 227 408 1 0 -1 -2 -3;
#X connect 0 0 14 0;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 14 0;
#X connect 6 0 14 0;
#X connect 7 0 14 0;
#X connect 8 0 7 0;
#X connect 9 0 14 1;
#X connect 10 0 14 0;
#X connect 11 0 10 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 14 0 16 0;
#X connect 14 1 15 0;
#X connect 15 0 17 0;
#X connect 16 0 18 0;
#X restore 218 507 pd rj;
#X obj 118 128 tabread pitch_original;
#N canvas 0 0 450 300 rotacao 0;
#X floatatom 88 195 5 0 0 0 - - -;
#X obj 88 252 tabwrite pitch_resultado;
#X floatatom 213 151 5 0 0 0 - - -;
#X obj 88 228 +;
#X obj 72 53 tabdump pitch_resultado;
#X obj 72 29 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 72 74 prepend set;
#X msg 72 98 124.373 96.2881 101.84 95.6349 92.0426 98.2475 83.8783
95.9615;
#X obj 72 135 list-drip;
#X obj 213 171 t b b f b;
#X obj 219 217 counter 7;
#X obj 75 163 t f b;
#X connect 0 0 3 0;
#X connect 2 0 9 0;
#X connect 3 0 1 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 7 0;
#X connect 9 1 5 0;
#X connect 9 2 3 1;
#X connect 10 0 1 1;
#X connect 11 0 0 0;
#X connect 11 1 10 0;
#X restore -172 420 pd rotacao espiral;
#X connect 1 0 7 0;
#X connect 7 0 6 0;
#X connect 8 0 21 0;
#X connect 9 0 33 0;
#X connect 9 1 6 1;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 10 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 18 0 15 0;
#X connect 21 0 12 0;
#X connect 21 1 7 1;
#X connect 23 0 32 0;
#X connect 25 0 30 0;
#X connect 26 0 51 0;
#X connect 26 1 24 1;
#X connect 27 0 28 0;
#X connect 28 0 26 0;
#X connect 29 0 27 0;
#X connect 30 0 29 0;
#X connect 30 1 32 1;
#X connect 32 0 24 0;
#X connect 33 0 1 0;
#X connect 35 0 36 0;
#X connect 35 0 41 0;
#X connect 37 0 39 0;
#X connect 41 0 37 0;
#X connect 41 0 38 0;
#X connect 42 0 45 0;
#X connect 43 0 45 1;
#X connect 45 0 44 0;
#X connect 51 0 23 0;
